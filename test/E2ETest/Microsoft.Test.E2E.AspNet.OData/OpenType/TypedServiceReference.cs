//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 4/23/2014 5:35:53 PM
namespace WebStack.QA.Test.OData.OpenComplexType.Typed.Client
{
    /// <summary>
    /// There are no comments for Container in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Container")]
    public partial class Container : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public Container(global::System.Uri serviceRoot) :
            base(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "WebStack.QA.Test.OData.OpenComplexType", "WebStack.QA.Test.OData.OpenComplexType.Typed.Client");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (Microsoft.OData.Client.OriginalNameAttribute)System.Linq.Enumerable.SingleOrDefault(clientType.GetCustomAttributes(typeof(Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("WebStack.QA.Test.OData.OpenComplexType.Typed.Client", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("WebStack.QA.Test.OData.OpenComplexType.", originalNameAttribute.OriginalName);
                }
                return string.Concat("WebStack.QA.Test.OData.OpenComplexType.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for Accounts in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public global::Microsoft.OData.Client.DataServiceQuery<Account> Accounts
        {
            get
            {
                if ((this._Accounts == null))
                {
                    this._Accounts = base.CreateQuery<Account>("Accounts");
                }
                return this._Accounts;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private global::Microsoft.OData.Client.DataServiceQuery<Account> _Accounts;
        /// <summary>
        /// There are no comments for Accounts in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
            private const string Edmx = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">
  <edmx:DataServices>
    <Schema Namespace=""WebStack.QA.Test.OData.OpenComplexType"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityType Name=""Account"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" />
        <Property Name=""AccountInfo"" Type=""WebStack.QA.Test.OData.OpenComplexType.AccountInfo"" Nullable=""false"" />
        <Property Name=""Address"" Type=""WebStack.QA.Test.OData.OpenComplexType.Address"" Nullable=""false"" />
        <Property Name=""Tags"" Type=""WebStack.QA.Test.OData.OpenComplexType.Tags"" Nullable=""false"" />
      </EntityType>
      <ComplexType Name=""AccountInfo"" OpenType=""true"">
        <Property Name=""NickName"" Type=""Edm.String"" />
      </ComplexType>
      <ComplexType Name=""Address"" OpenType=""true"">
        <Property Name=""City"" Type=""Edm.String"" />
        <Property Name=""Street"" Type=""Edm.String"" />
      </ComplexType>
      <ComplexType Name=""Tags"" OpenType=""true"" />
      <EnumType Name=""Gender"">
        <Member Name=""Female"" Value=""2"" />
        <Member Name=""Male"" Value=""1"" />
      </EnumType>
      <Function Name=""GetAddressFunction"" IsBound=""true"">
        <Parameter Name=""bindingParameter"" Type=""WebStack.QA.Test.OData.OpenComplexType.Account"" />
        <ReturnType Type=""WebStack.QA.Test.OData.OpenComplexType.Address"" />
      </Function>
      <Action Name=""IncreaseAgeAction"" IsBound=""true"">
        <Parameter Name=""bindingParameter"" Type=""WebStack.QA.Test.OData.OpenComplexType.Account"" />
        <ReturnType Type=""WebStack.QA.Test.OData.OpenComplexType.AccountInfo"" />
      </Action>
      <Action Name=""ResetDataSource"" />
      <Action Name=""UpdateAddressAction"">
        <Parameter Name=""Address"" Type=""WebStack.QA.Test.OData.OpenComplexType.Address"" />
        <Parameter Name=""ID"" Type=""Edm.Int32"" Nullable=""false"" />
        <ReturnType Type=""WebStack.QA.Test.OData.OpenComplexType.Address"" />
      </Action>
      <EntityContainer Name=""Container"">
        <EntitySet Name=""Accounts"" EntityType=""WebStack.QA.Test.OData.OpenComplexType.Account"" />
        <ActionImport Name=""ResetDataSource"" Action=""WebStack.QA.Test.OData.OpenComplexType.ResetDataSource"" />
        <ActionImport Name=""UpdateAddressAction"" Action=""WebStack.QA.Test.OData.OpenComplexType.UpdateAddressAction"" />
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>";
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader(Edmx);
                try
                {
                    return global::Microsoft.OData.Edm.Csdl.CsdlReader.Parse(reader);
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }
        }
#if !ASTORIA_LIGHT && !PORTABLELIB
        /// <summary>
        /// There are no comments for ResetDataSource in the schema.
        /// </summary>
        public void ResetDataSource()
        {
            global::System.Uri requestUri = new global::System.Uri(this.BaseUri.OriginalString.Trim('/') + "/ResetDataSource");
            this.Execute(requestUri, "POST",
                new global::Microsoft.OData.Client.OperationParameter[] { });
        }
        /// <summary>
        /// There are no comments for UpdateAddressAction in the schema.
        /// </summary>
        public global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address UpdateAddressAction(global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address Address, int ID)
        {
            global::System.Uri requestUri = new global::System.Uri(this.BaseUri.OriginalString.Trim('/') + "/UpdateAddressAction");
            return global::System.Linq.Enumerable.Single(this.Execute<global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address>(requestUri, "POST", true,
                new global::Microsoft.OData.Client.OperationParameter[] { new global::Microsoft.OData.Client.BodyOperationParameter("Address", Address),
                    new global::Microsoft.OData.Client.BodyOperationParameter("ID", ID) }));
        }
#endif
    }
    /// <summary>
    /// There are no comments for Account in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.EntitySet("Accounts")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Account")]
    public partial class Account : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="accountInfo">Initial value of AccountInfo.</param>
        /// <param name="address">Initial value of Address.</param>
        /// <param name="tags">Initial value of Tags.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public static Account CreateAccount(int ID, global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.AccountInfo accountInfo, global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address address, global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Tags tags)
        {
            Account account = new Account();
            account.Id = ID;
            if ((accountInfo == null))
            {
                throw new global::System.ArgumentNullException("accountInfo");
            }
            account.AccountInfo = accountInfo;
            if ((address == null))
            {
                throw new global::System.ArgumentNullException("address");
            }
            account.Address = address;
            if ((tags == null))
            {
                throw new global::System.ArgumentNullException("tags");
            }
            account.Tags = tags;
            return account;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Name")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
                this.OnPropertyChanged("Name");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property AccountInfo in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("AccountInfo")]
        public global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.AccountInfo AccountInfo
        {
            get
            {
                return this._AccountInfo;
            }
            set
            {
                this.OnAccountInfoChanging(value);
                this._AccountInfo = value;
                this.OnAccountInfoChanged();
                this.OnPropertyChanged("AccountInfo");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.AccountInfo _AccountInfo;
        partial void OnAccountInfoChanging(global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.AccountInfo value);
        partial void OnAccountInfoChanged();
        /// <summary>
        /// There are no comments for Property Address in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Address")]
        public global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnAddressChanging(value);
                this._Address = value;
                this.OnAddressChanged();
                this.OnPropertyChanged("Address");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address _Address;
        partial void OnAddressChanging(global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address value);
        partial void OnAddressChanged();
        /// <summary>
        /// There are no comments for Property Tags in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Tags")]
        public global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Tags Tags
        {
            get
            {
                return this._Tags;
            }
            set
            {
                this.OnTagsChanging(value);
                this._Tags = value;
                this.OnTagsChanged();
                this.OnPropertyChanged("Tags");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Tags _Tags;
        partial void OnTagsChanging(global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Tags value);
        partial void OnTagsChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
#if !ASTORIA_LIGHT && !PORTABLELIB
        /// <summary>
        /// There are no comments for GetAddressFunction in the schema.
        /// </summary>
        public global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address GetAddressFunction()
        {
            global::Microsoft.OData.Client.EntityDescriptor resource = Context.EntityTracker.TryGetEntityDescriptor(this);
            if (resource == null)
            {
                throw new System.Exception("cannot find entity");
            }

            global::System.Uri requestUri = new global::System.Uri(resource.Identity.OriginalString.Trim('/') + "/WebStack.QA.Test.OData.OpenComplexType.GetAddressFunction");
            return global::System.Linq.Enumerable.Single(Context.Execute<global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.Address>(requestUri, "GET", true,
                new global::Microsoft.OData.Client.OperationParameter[] { }));
        }
        /// <summary>
        /// There are no comments for IncreaseAgeAction in the schema.
        /// </summary>
        public global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.AccountInfo IncreaseAgeAction()
        {
            global::Microsoft.OData.Client.EntityDescriptor resource = Context.EntityTracker.TryGetEntityDescriptor(this);
            if (resource == null)
            {
                throw new System.Exception("cannot find entity");
            }

            global::System.Uri requestUri = new global::System.Uri(resource.EditLink.OriginalString.Trim('/') + "/WebStack.QA.Test.OData.OpenComplexType.IncreaseAgeAction");
            return global::System.Linq.Enumerable.Single(
                Context.Execute<global::WebStack.QA.Test.OData.OpenComplexType.Typed.Client.AccountInfo>(requestUri, "POST", true,
                new global::Microsoft.OData.Client.OperationParameter[] { }));
        }
#endif
    }
    /// <summary>
    /// There are no comments for AccountInfo in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("AccountInfo")]
    public partial class AccountInfo : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// There are no comments for Property NickName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("NickName")]
        public string NickName
        {
            get
            {
                return this._NickName;
            }
            set
            {
                this.OnNickNameChanging(value);
                this._NickName = value;
                this.OnNickNameChanged();
                this.OnPropertyChanged("NickName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private string _NickName;
        partial void OnNickNameChanging(string value);
        partial void OnNickNameChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for Address in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Address")]
    public partial class Address : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// There are no comments for Property City in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("City")]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                this.OnCityChanging(value);
                this._City = value;
                this.OnCityChanged();
                this.OnPropertyChanged("City");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private string _City;
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        /// <summary>
        /// There are no comments for Property Street in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Street")]
        public string Street
        {
            get
            {
                return this._Street;
            }
            set
            {
                this.OnStreetChanging(value);
                this._Street = value;
                this.OnStreetChanged();
                this.OnPropertyChanged("Street");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        private string _Street;
        partial void OnStreetChanging(string value);
        partial void OnStreetChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for Tags in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Tags")]
    public partial class Tags : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "1.0.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for Gender in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Gender")]
    public enum Gender
    {
        [global::Microsoft.OData.Client.OriginalNameAttribute("Female")]
        Female = 2,
        [global::Microsoft.OData.Client.OriginalNameAttribute("Male")]
        Male = 1
    }
}
