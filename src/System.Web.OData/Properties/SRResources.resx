<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotSerializerNull" xml:space="preserve">
    <value>Cannot serialize a null '{0}'.</value>
  </data>
  <data name="TypeCannotBeSerialized" xml:space="preserve">
    <value>'{0}' cannot be serialized using the {1}.</value>
  </data>
  <data name="WriteObjectInlineNotSupported" xml:space="preserve">
    <value>{0} does not support WriteObjectInline.</value>
  </data>
  <data name="PropertyMustHavePublicGetterAndSetter" xml:space="preserve">
    <value>The PropertyInfo provided must have public 'get' and 'set' accessor methods.</value>
  </data>
  <data name="CreateODataValueNotSupported" xml:space="preserve">
    <value>{0} does not support CreateODataValue.</value>
  </data>
  <data name="TypeMustBeResourceSet" xml:space="preserve">
    <value>{0} is not a resource set type. Only resource set are supported.</value>
  </data>
  <data name="WriteObjectNotSupported" xml:space="preserve">
    <value>{0} does not support WriteObject.</value>
  </data>
  <data name="UriQueryStringInvalid" xml:space="preserve">
    <value>The query specified in the URI is not valid. {0}</value>
  </data>
  <data name="LambdaExpressionMustHaveExactlyOneParameter" xml:space="preserve">
    <value>The LambdaExpression must have exactly one parameter.</value>
  </data>
  <data name="LambdaExpressionMustHaveExactlyTwoParameters" xml:space="preserve">
    <value>The LambdaExpression must have exactly two parameters.</value>
  </data>
  <data name="MemberExpressionsMustBeBoundToLambdaParameter" xml:space="preserve">
    <value>MemberExpressions must be bound to the LambdaExpression parameter.</value>
  </data>
  <data name="MemberExpressionsMustBeProperties" xml:space="preserve">
    <value>Member '{0}.{1}' is not a property.</value>
  </data>
  <data name="EqualExpressionsMustHaveSameTypes" xml:space="preserve">
    <value>The type of left property '{0}.{1}' is '{2}' while the type of right property '{3}.{4}' is '{5}'. The left and right type of the equal expression must be same.</value>
  </data>
  <data name="UnsupportedExpressionNodeType" xml:space="preserve">
    <value>Unsupported Expression NodeType.</value>
  </data>
  <data name="UnsupportedExpressionNodeTypeWithName" xml:space="preserve">
    <value>Unsupported Expression NodeType '{0}'.</value>
  </data>
  <data name="FailedToBuildEdmModelBecauseReturnTypeIsNull" xml:space="preserve">
    <value>Cannot create an EDM model as the action '{0}' on controller '{1}' has a void return type.</value>
  </data>
  <data name="FailedToRetrieveTypeToBuildEdmModel" xml:space="preserve">
    <value>Cannot create an EDM model as the action '{0}' on controller '{1}' has a return type '{2}' that does not implement IEnumerable&lt;T&gt;.</value>
  </data>
  <data name="QueryParameterNotSupported" xml:space="preserve">
    <value>The query parameter '{0}' is not supported.</value>
  </data>
  <data name="RequestMustContainConfiguration" xml:space="preserve">
    <value>Request message does not contain an HttpConfiguration object.</value>
  </data>
  <data name="ActionContextMustHaveDescriptor" xml:space="preserve">
    <value>The HttpActionContext.ActionDescriptor is null.</value>
  </data>
  <data name="ActionContextMustHaveRequest" xml:space="preserve">
    <value>The HttpActionContext.Request is null.</value>
  </data>
  <data name="ActionExecutedContextMustHaveActionContext" xml:space="preserve">
    <value>The HttpActionExecutedContext.ActionContext is null.</value>
  </data>
  <data name="ActionExecutedContextMustHaveRequest" xml:space="preserve">
    <value>The HttpExecutedActionContext.Request is null.</value>
  </data>
  <data name="OrderByClauseNotSupported" xml:space="preserve">
    <value>Only ordering by properties is supported for non-primitive collections. Expressions are not supported.</value>
  </data>
  <data name="EntitySetNotFoundForName" xml:space="preserve">
    <value>No EntitySet exists in the EdmModel with entitySetName '{0}'.</value>
  </data>
  <data name="QueryCannotBeEmpty" xml:space="preserve">
    <value>The value for OData query '{0}' cannot be empty.</value>
  </data>
  <data name="EdmTypeNotSupported" xml:space="preserve">
    <value>{0} is not a supported EDM type.</value>
  </data>
  <data name="MultipleMatchingClrTypesForEdmType" xml:space="preserve">
    <value>More than one matching CLR type found for the EDM type {0}.\nThe matching CLR types are {1}.</value>
  </data>
  <data name="ODataFunctionNotSupported" xml:space="preserve">
    <value>Unknown function '{0}'.</value>
  </data>
  <data name="QueryNodeBindingNotSupported" xml:space="preserve">
    <value>Binding OData QueryNode of kind {0} is not supported by {1}.</value>
  </data>
  <data name="QueryNodeValidationNotSupported" xml:space="preserve">
    <value>Validating OData QueryNode of kind {0} is not supported by {1}.</value>
  </data>
  <data name="UnaryNodeValidationNotSupported" xml:space="preserve">
    <value>Validating OData UnaryOperatorNode of kind {0} is not supported by {1}.</value>
  </data>
  <data name="OrderByDuplicateProperty" xml:space="preserve">
    <value>Duplicate property named '{0}' is not supported in '$orderby'.</value>
  </data>
  <data name="CannotRecognizeNodeType" xml:space="preserve">
    <value>'{0}' does not recognize the node with type '{1}'.</value>
  </data>
  <data name="TargetKindNotImplemented" xml:space="preserve">
    <value>'{0}' of kind '{1}' is not implemented.</value>
  </data>
  <data name="InvalidDollarId" xml:space="preserve">
    <value>The value of $id '{0}' is invalid.</value>
  </data>
  <data name="ErrorTypeMustBeODataErrorOrHttpError" xml:space="preserve">
    <value>The type '{0}' is not supported by the ODataErrorSerializer. The type must be ODataError or HttpError.</value>
  </data>
  <data name="CannotAutoCreateMultipleCandidates" xml:space="preserve">
    <value>Cannot automatically bind the navigation property '{0}' on type '{1}' for the entity set or singleton '{2}' because there are two or more matching target entity sets or singletons. The matching entity sets or singletons are: {3}.</value>
  </data>
  <data name="PropertyDoesNotBelongToType" xml:space="preserve">
    <value>The property '{0}' does not belong to the type '{1}'.</value>
  </data>
  <data name="EntitySetAlreadyConfiguredDifferentEntityType" xml:space="preserve">
    <value>The entity set '{0}' was already configured with a different EntityType ('{1}').</value>
  </data>
  <data name="TypeCannotBeComplexWasEntity" xml:space="preserve">
    <value>The type '{0}' cannot be configured as a ComplexType. It was previously configured as an EntityType.</value>
  </data>
  <data name="TypeCannotBeEntityWasComplex" xml:space="preserve">
    <value>The type '{0}' cannot be configured as an EntityType. It was previously configured as a ComplexType.</value>
  </data>
  <data name="TypeCannotBeEnum" xml:space="preserve">
    <value>The type '{0}' cannot be configured as an enum type.</value>
  </data>
  <data name="EnumValueCannotBeLong" xml:space="preserve">
    <value>The value of enum member '{0}' cannot be converted to a long type.</value>
  </data>
  <data name="EnumTypeDoesNotExist" xml:space="preserve">
    <value>The enum type '{0}' does not exist.</value>
  </data>
  <data name="RecursiveComplexTypesNotAllowed" xml:space="preserve">
    <value>The complex type '{0}' has a reference to itself through the property '{1}'. A recursive loop of complex types is not allowed.</value>
  </data>
  <data name="DeserializerDoesNotSupportRead" xml:space="preserve">
    <value>'{0}' does not support Read.</value>
  </data>
  <data name="MappingDoesNotContainResourceType" xml:space="preserve">
    <value>The provided mapping does not contain a resource for the resource type '{0}'.</value>
  </data>
  <data name="ManyToManyNavigationPropertyMustReturnCollection" xml:space="preserve">
    <value>The property '{0}' on the type '{1}' is being configured as a Many-to-Many navigation property. Many to Many navigation properties must be collections.</value>
  </data>
  <data name="DoesNotSupportReadInLine" xml:space="preserve">
    <value>Type '{0}' does not support ReadInline.</value>
  </data>
  <data name="FormatterReadIsNotSupportedForType" xml:space="preserve">
    <value>Reading type '{0}' is not supported by '{1}'.</value>
  </data>
  <data name="MustBeComplexProperty" xml:space="preserve">
    <value>The property '{0}' on type '{1}' must be a Complex property.</value>
  </data>
  <data name="MustBeNavigationProperty" xml:space="preserve">
    <value>The property  '{0}' on type '{1}' must be a Navigation property.</value>
  </data>
  <data name="MustBePrimitiveProperty" xml:space="preserve">
    <value>The property '{0}'  on type '{1}' must be a Primitive property.</value>
  </data>
  <data name="MustBeEnumProperty" xml:space="preserve">
    <value>The property '{0}' on type '{1}' must be an Enum property.</value>
  </data>
  <data name="MustBeDateTimeProperty" xml:space="preserve">
    <value>The property '{0}' on type '{1}' must be a System.DateTime property.</value>
  </data>
  <data name="MustBeTimeSpanProperty" xml:space="preserve">
    <value>The property '{0}' on type '{1}' must be a System.TimeSpan property.</value>
  </data>
  <data name="MustHaveMatchingMultiplicity" xml:space="preserve">
    <value>The multiplicity of the '{0}' property must be '{1}'.</value>
  </data>
  <data name="MustBePrimitiveType" xml:space="preserve">
    <value>The type '{0}' must be a primitive type.</value>
  </data>
  <data name="RebindingNotSupported" xml:space="preserve">
    <value>Rebinding is not supported.</value>
  </data>
  <data name="MaxNodeLimitExceeded" xml:space="preserve">
    <value>The node count limit of '{0}' has been exceeded. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings.</value>
  </data>
  <data name="InvalidEntitySetName" xml:space="preserve">
    <value>'{0}' is not a valid entity set name.</value>
  </data>
  <data name="CannotCastFilter" xml:space="preserve">
    <value>Cannot cast $filter of type '{0}' to type '{1}'.</value>
  </data>
  <data name="MultipleAttributesFound" xml:space="preserve">
    <value>The member '{0}' on type '{1}' contains multiple instances of the attribute '{2}'.</value>
  </data>
  <data name="GetEdmModelCalledMoreThanOnce" xml:space="preserve">
    <value>GetEdmModel cannot be called more than once. Consider using a different instance of the model builder or reusing the model you have built earlier.</value>
  </data>
  <data name="CollectionPropertiesMustReturnIEnumerable" xml:space="preserve">
    <value>CollectionProperties must implement IEnumerable&lt;&gt;. The property '{0}' declared on '{1}' does not implement IEnumerable&lt;&gt;.</value>
  </data>
  <data name="MustBeCollectionProperty" xml:space="preserve">
    <value>The '{0}' property on '{1}' must be a Collection property.</value>
  </data>
  <data name="CannotPatchNavigationProperties" xml:space="preserve">
    <value>Cannot apply PATCH to navigation property '{0}' on entity type '{1}'.</value>
  </data>
  <data name="TypeMustBeEnumOrNullableEnum" xml:space="preserve">
    <value>The type '{0}' must be an enum or Nullable&lt;T&gt; where T is an enum type.</value>
  </data>
  <data name="PropertyMustBeEnum" xml:space="preserve">
    <value>The value with type '{0}' must have type '{1}'.</value>
  </data>
  <data name="PropertyMustBeString" xml:space="preserve">
    <value>The value must be a string.</value>
  </data>
  <data name="PropertyMustBeDateTimeOffsetOrDate" xml:space="preserve">
    <value>The value must be a DateTimeOffset or Date.</value>
  </data>
  <data name="PropertyMustBeTimeOfDay" xml:space="preserve">
    <value>The value must be a Edm.TimeOfDay.</value>
  </data>
  <data name="PropertyMustBeStringLengthOne" xml:space="preserve">
    <value>The value must be a string with a length of 1.</value>
  </data>
  <data name="PropertyMustBeStringMaxLengthOne" xml:space="preserve">
    <value>The value must be a string with a maximum length of 1.</value>
  </data>
  <data name="ArgumentMustBeOfType" xml:space="preserve">
    <value>The argument must be of type '{0}'.</value>
  </data>
  <data name="CollectionShouldHaveAddMethod" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.</value>
  </data>
  <data name="InvalidBindingParameterType" xml:space="preserve">
    <value>Invalid bindingParameter type '{0}'. A bindingParameter must be either an EntityType or a Collection of EntityTypes.</value>
  </data>
  <data name="MoreThanOneOperationFound" xml:space="preserve">
    <value>More than one Operation called '{0}' was found. Try using the other RemoveOperation override.</value>
  </data>
  <data name="NoMatchingIEdmTypeFound" xml:space="preserve">
    <value>No IEdmType could be found for '{0}'.</value>
  </data>
  <data name="UnsupportedEdmTypeKind" xml:space="preserve">
    <value>Found unsupported EdmTypeKind '{0}' in list of available types.</value>
  </data>
  <data name="CannotDefineKeysOnDerivedTypes" xml:space="preserve">
    <value>Cannot define keys on type '{0}' deriving from '{1}'. The base type in the entity inheritance hierarchy already contains keys.</value>
  </data>
  <data name="CannotRedefineBaseTypeProperty" xml:space="preserve">
    <value>Cannot redefine property '{0}' already defined on the base type '{1}'.</value>
  </data>
  <data name="TypeDoesNotInheritFromBaseType" xml:space="preserve">
    <value>'{0}' does not inherit from '{1}'.</value>
  </data>
  <data name="PropertyAlreadyDefinedInDerivedType" xml:space="preserve">
    <value>Cannot define property '{0}' in the base type '{1}' as the derived type '{2}' already defines it.</value>
  </data>
  <data name="ConvertToEnumFailed" xml:space="preserve">
    <value>Cannot compare an enum of type '{0}' to an expression of type '{1}'.</value>
  </data>
  <data name="FunctionNotSupportedOnEnum" xml:space="preserve">
    <value>The '{0}' function cannot be applied to an enumeration-typed argument.</value>
  </data>
  <data name="CannotInstantiateAbstractResourceType" xml:space="preserve">
    <value>An instance of the abstract resource type '{0}' was found. Abstract resource types cannot be instantiated.</value>
  </data>
  <data name="NullElementInCollection" xml:space="preserve">
    <value>Collections cannot contain null elements.</value>
  </data>
  <data name="WriteToStreamAsyncMustHaveRequest" xml:space="preserve">
    <value>The OData formatter does not support writing client requests. This formatter instance must have an associated request.</value>
  </data>
  <data name="ValueIsInvalid" xml:space="preserve">
    <value>The value '{0}' is invalid. {1}</value>
  </data>
  <data name="ModelBinderUtil_ValueCannotBeEnum" xml:space="preserve">
    <value>The binding value '{0}' cannot be bound to the enum type '{1}'.</value>
  </data>
  <data name="ModelBinderUtil_ModelMetadataCannotBeNull" xml:space="preserve">
    <value>The binding context cannot have a null ModelMetadata.</value>
  </data>
  <data name="EntityTypeMismatch" xml:space="preserve">
    <value>The entity type '{0}' does not match the expected entity type '{1}' as set on the query context.</value>
  </data>
  <data name="CannotApplyODataQueryOptionsOfT" xml:space="preserve">
    <value>Cannot apply {0} of '{1}' to {2} of '{3}'.</value>
  </data>
  <data name="HasActionLinkRequiresBindToEntity" xml:space="preserve">
    <value>To register an action link factory, actions must be bindable to a single entity. Action '{0}' does not meet this requirement.</value>
  </data>
  <data name="HasActionLinkRequiresBindToCollectionOfEntity" xml:space="preserve">
    <value>To register an action link factory, actions must be bindable to the collection of entity. Action '{0}' does not meet this requirement.</value>
  </data>
  <data name="HasFunctionLinkRequiresBindToEntity" xml:space="preserve">
    <value>To register a function link factory, functions must be bindable to a single entity. Function '{0}' does not meet this requirement.</value>
  </data>
  <data name="HasFunctionLinkRequiresBindToCollectionOfEntity" xml:space="preserve">
    <value>To register a function link factory, functions must be bindable to the collection of entity. Function '{0}' does not meet this requirement.</value>
  </data>
  <data name="NavigationPropertyNotInHierarchy" xml:space="preserve">
    <value>The declaring entity type '{0}' of the given navigation property is not a part of the entity type '{1}' hierarchy of the entity set or singleton '{2}'.</value>
  </data>
  <data name="TargetEntityTypeMissing" xml:space="preserve">
    <value>Could not find the target entity type for the navigation property '{0}' on entity type '{1}'.</value>
  </data>
  <data name="KeyValueCannotBeNull" xml:space="preserve">
    <value>Key property '{0}' of type '{1}' is null. Key properties cannot have null values.</value>
  </data>
  <data name="BinaryOperatorNotSupported" xml:space="preserve">
    <value>A binary operator with incompatible types was detected. Found operand types '{0}' and '{1}' for operator kind '{2}'.</value>
  </data>
  <data name="QueryingRequiresObjectContent" xml:space="preserve">
    <value>Queries can not be applied to a response content of type '{0}'. The response content must be an ObjectContent.</value>
  </data>
  <data name="MaxAnyAllExpressionLimitExceeded" xml:space="preserve">
    <value>The Any/All nesting limit of '{0}' has been exceeded. '{1}' can be configured on ODataQuerySettings or EnableQueryAttribute.</value>
  </data>
  <data name="CannotAddToNullCollection" xml:space="preserve">
    <value>The property '{0}' on type '{1}' returned a null value. The input stream contains collection items which cannot be added if the instance is null.</value>
  </data>
  <data name="PropertyIsNotCollection" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' must be a collection.</value>
  </data>
  <data name="GetOnlyCollectionCannotBeArray" xml:space="preserve">
    <value>The value of the property '{0}' on type '{1}' is an array. Consider adding a setter for the property.</value>
  </data>
  <data name="InvalidPathSegment" xml:space="preserve">
    <value>The URI segment '{0}' is invalid after the segment '{1}'.</value>
  </data>
  <data name="RequestNotActionInvocation" xml:space="preserve">
    <value>The last segment of the request URI '{0}' was not recognized as an OData action.</value>
  </data>
  <data name="NoMatchingResource" xml:space="preserve">
    <value>No HTTP resource was found that matches the request URI '{0}'.</value>
  </data>
  <data name="NoRoutingHandlerToSelectAction" xml:space="preserve">
    <value>No routing convention was found to select an action for the OData path with template '{0}'.</value>
  </data>
  <data name="DeltaTypeMismatch" xml:space="preserve">
    <value>Cannot use Delta of type '{0}' on an entity of type '{1}'.</value>
  </data>
  <data name="DeltaEntityTypeNotAssignable" xml:space="preserve">
    <value>The actual entity type '{0}' is not assignable to the expected type '{1}'.</value>
  </data>
  <data name="NotAllowedArithmeticOperator" xml:space="preserve">
    <value>Arithmetic operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedFunction" xml:space="preserve">
    <value>Function '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedLogicalOperator" xml:space="preserve">
    <value>Logical operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedOrderByProperty" xml:space="preserve">
    <value>Order by '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedQueryOption" xml:space="preserve">
    <value>Query option '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="SkipTopLimitExceeded" xml:space="preserve">
    <value>The limit of '{0}' for {1} query has been exceeded. The value from the incoming request is '{2}'.</value>
  </data>
  <data name="EntitySetMissingDuringSerialization" xml:space="preserve">
    <value>The related entity set could not be found from the OData path. The related entity set is required to serialize the payload.</value>
  </data>
  <data name="UnableToDetermineMetadataUrl" xml:space="preserve">
    <value>The ODataMediaTypeFormatter must be able to determine the metadata URL for a request in order to serialize the response.</value>
  </data>
  <data name="ODataPathMissing" xml:space="preserve">
    <value>The operation cannot be completed because no ODataPath is available for the request.</value>
  </data>
  <data name="OrderByDuplicateIt" xml:space="preserve">
    <value>Multiple '$it' nodes are not supported in '$orderby'.</value>
  </data>
  <data name="ClrTypeNotInModel" xml:space="preserve">
    <value>The given model does not contain the type '{0}'.</value>
  </data>
  <data name="ReadFromStreamAsyncMustHaveRequest" xml:space="preserve">
    <value>The OData formatter requires an attached request in order to deserialize. Controller classes must derive from ODataController or be marked with ODataFormattingAttribute. Custom parameter bindings must call GetPerRequestFormatterInstance on each formatter and use these per-request instances.</value>
  </data>
  <data name="RequestMustHaveModel" xml:space="preserve">
    <value>The request must have an associated EDM model. Consider using the extension method HttpConfiguration.MapODataServiceRoute to register a route that parses the OData URI and attaches the model information.</value>
  </data>
  <data name="QueryGetModelMustNotReturnNull" xml:space="preserve">
    <value>A model is required for querying. Consider implementing the EnableQueryAttribute.GetModel method never to return a null value.</value>
  </data>
  <data name="RequestMustHaveODataRouteName" xml:space="preserve">
    <value>The request must have an associated OData route name. Consider using the extension request.ODataProperties().RouteName to set a route name.</value>
  </data>
  <data name="ManyNavigationPropertiesCannotBeChanged" xml:space="preserve">
    <value>Cannot change multiplicity of the collection navigation property '{0}'.</value>
  </data>
  <data name="UnableToDetermineBaseUrl" xml:space="preserve">
    <value>The ODataMediaTypeFormatter was unable to determine the base URI for the request. The request must be processed by an OData route for the OData formatter to serialize the response.</value>
  </data>
  <data name="CannotWriteType" xml:space="preserve">
    <value>{0} cannot write an object of type '{1}'.</value>
  </data>
  <data name="RootElementNameMissing" xml:space="preserve">
    <value>The 'RootElementName' property is required on '{0}'.</value>
  </data>
  <data name="TypeCannotBeDeserialized" xml:space="preserve">
    <value>'{0}' cannot be deserialized using the {1}.</value>
  </data>
  <data name="ResourceTypeNotInModel" xml:space="preserve">
    <value>Cannot find the resource type '{0}' in the model.</value>
  </data>
  <data name="ModelMissingFromReadContext" xml:space="preserve">
    <value>The EDM model is missing on the read context. The model is required on the read context to deserialize the payload.</value>
  </data>
  <data name="NestedPropertyNotfound" xml:space="preserve">
    <value>Cannot find nested property '{0}' on the resource type '{1}'.</value>
  </data>
  <data name="SelectExpandEmptyOrNull" xml:space="preserve">
    <value>'select' and 'expand' cannot be both null or empty.</value>
  </data>
  <data name="SelectionTypeNotSupported" xml:space="preserve">
    <value>$select does not support selections of type '{0}'.</value>
  </data>
  <data name="SelectNonEntity" xml:space="preserve">
    <value>The type '{0}' is not an entity type. Only entity types support $select and $expand.</value>
  </data>
  <data name="PropertyNotFound" xml:space="preserve">
    <value>The EDM instance of type '{0}' is missing the property '{1}'.</value>
  </data>
  <data name="EdmTypeCannotBeNull" xml:space="preserve">
    <value>The EDM type of the object of type '{0}' is null. The EDM type of an {1} cannot be null.</value>
    <comment>{1} may be System.Web.OData.IEdmObject which does not scan. https://aspnetwebstack.codeplex.com/workitem/1558</comment>
  </data>
  <data name="EdmObjectNull" xml:space="preserve">
    <value>The property 'EdmObject' of {0} cannot be null.</value>
  </data>
  <data name="BatchRequestInvalidMediaType" xml:space="preserve">
    <value>The batch request must have '{0}' as the media type.</value>
  </data>
  <data name="BatchRequestMissingBoundary" xml:space="preserve">
    <value>The batch request must have a boundary specification in the "Content-Type" header.</value>
  </data>
  <data name="BatchRequestMissingContentType" xml:space="preserve">
    <value>The batch request must have a "Content-Type" header.</value>
  </data>
  <data name="InvalidBatchReaderState" xml:space="preserve">
    <value>The current batch reader state '{0}' is invalid. The expected state is '{1}'.</value>
  </data>
  <data name="BatchRequestMissingContent" xml:space="preserve">
    <value>The 'Content' property on the batch request cannot be null.</value>
  </data>
  <data name="InvalidExpansionDepthValue" xml:space="preserve">
    <value>'{0}' should be less than or equal to '{1}'.</value>
  </data>
  <data name="MaxExpandDepthExceeded" xml:space="preserve">
    <value>The request includes a $expand path which is too deep. The maximum depth allowed is {0}. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings, or set the 'MaxDepth' property in ExpandAttribute.</value>
  </data>
  <data name="NonSelectExpandOnSingleEntity" xml:space="preserve">
    <value>The requested resource is not a collection. Query options $filter, $orderby, $count, $skip, and $top can be applied only on collections.</value>
  </data>
  <data name="SingleResultHasMoreThanOneEntity" xml:space="preserve">
    <value>The action '{0}' on controller '{1}' returned a {2} containing more than one element. {2} must have zero or one elements.</value>
  </data>
  <data name="UnsupportedSelectExpandPath" xml:space="preserve">
    <value>A path within the select or expand query option is not supported.</value>
  </data>
  <data name="UrlHelperNull" xml:space="preserve">
    <value>The property 'Url' of {0} cannot be null.</value>
  </data>
  <data name="EdmComplexObjectNullRef" xml:space="preserve">
    <value>Cannot get property '{0}' of a null EDM object of type '{1}'.</value>
  </data>
  <data name="UnsupportedEdmType" xml:space="preserve">
    <value>The EDM type '{0}' of kind '{1}' is not supported.</value>
  </data>
  <data name="UnexpectedElementType" xml:space="preserve">
    <value>The element type '{0}' of the given collection type '{1}' is not of the type '{2}'.</value>
  </data>
  <data name="ActionNotBoundToEntity" xml:space="preserve">
    <value>The action '{0}' is not bound to an entity. Only actions that are bound to entities can have action links.</value>
  </data>
  <data name="ActionNotBoundToCollectionOfEntity" xml:space="preserve">
    <value>The action '{0}' is not bound to the collection of entity. Only actions that are bound to entities can have action links.</value>
  </data>
  <data name="TypeMustBeEntity" xml:space="preserve">
    <value>{0} is not an entity type. Only entity types are supported.</value>
  </data>
  <data name="EditLinkNullForLocationHeader" xml:space="preserve">
    <value>The edit link builder for the entity set '{0}' returned null. An edit link is required for the location header.</value>
  </data>
  <data name="ApplyToOnUntypedQueryOption" xml:space="preserve">
    <value>The query option is not bound to any CLR type. '{0}' is only supported with a query option bound to a CLR type.</value>
  </data>
  <data name="ElementClrTypeNull" xml:space="preserve">
    <value>The property 'ElementClrType' of {0} cannot be null.</value>
  </data>
  <data name="CollectionShouldHaveClearMethod" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' does not have a Clear method. Consider using a collection type that does have a Clear method, such as IList&lt;T&gt; or ICollection&lt;T&gt;.</value>
  </data>
  <data name="OrderByNodeCountExceeded" xml:space="preserve">
    <value>The number of clauses in $orderby query option exceeded the maximum number allowed. The maximum number of $orderby clauses allowed is {0}.</value>
  </data>
  <data name="ReturnEntityCollectionWithoutEntitySet" xml:space="preserve">
    <value>The EDM type '{0}' is already declared as an entity type. Use the method 'ReturnsCollectionFromEntitySet' if the return type is an entity collection.</value>
  </data>
  <data name="ReturnEntityWithoutEntitySet" xml:space="preserve">
    <value>The EDM type '{0}' is already declared as an entity type. Use the method 'ReturnsFromEntitySet' if the return type is an entity.</value>
  </data>
  <data name="UnterminatedStringLiteral" xml:space="preserve">
    <value>Unterminated string literal at {0} in segment '{1}'.</value>
  </data>
  <data name="InvalidSingleQuoteCountForNonStringLiteral" xml:space="preserve">
    <value>The count of single quotes in non-string literal '{0}' must be 0 or 2 in segment '{1}'.</value>
  </data>
  <data name="LiteralHasABadFormat" xml:space="preserve">
    <value>The literal '{0}' has a bad format in segment '{1}'.</value>
  </data>
  <data name="NoKeyNameFoundInSegment" xml:space="preserve">
    <value>No key name was found at {0} in segment '{1}'.</value>
  </data>
  <data name="NoValueLiteralFoundInSegment" xml:space="preserve">
    <value>No value for key '{0}' was found at {1} in segment '{2}'.</value>
  </data>
  <data name="DuplicateKeyInSegment" xml:space="preserve">
    <value>Duplicate key '{0}' found in segment '{1}'.</value>
  </data>
  <data name="NonNullUriRequiredForMediaTypeMapping" xml:space="preserve">
    <value>A non-null request URI must be provided to determine if a '{0}' matches a given request or response message.</value>
  </data>
  <data name="EmptyParameterAlias" xml:space="preserve">
    <value>Parameter alias '{0}' in segment '{1}' is empty.</value>
  </data>
  <data name="ParameterAliasMustBeInCurlyBraces" xml:space="preserve">
    <value>Parameter alias '{0}' in segment '{1}' does not start with '{{' or ends with '}}'.</value>
  </data>
  <data name="EmptyKeyTemplate" xml:space="preserve">
    <value>Key template value '{0}' for key segment '{1}' is empty.</value>
  </data>
  <data name="KeyTemplateMustBeInCurlyBraces" xml:space="preserve">
    <value>Key template value '{0}' for key segment '{1}' does not start with '{{' or ends with '}}'.</value>
  </data>
  <data name="UnresolvedPathSegmentInTemplate" xml:space="preserve">
    <value>Found an unresolved path segment '{0}' in the OData path template '{1}'.</value>
  </data>
  <data name="InvalidODataPathTemplate" xml:space="preserve">
    <value>The given OData path template '{0}' is invalid.</value>
  </data>
  <data name="InvalidODataRouteOnAction" xml:space="preserve">
    <value>The path template '{0}' on the action '{1}' in controller '{2}' is not a valid OData path template. {3}</value>
  </data>
  <data name="RoutePrefixStartsWithSlash" xml:space="preserve">
    <value>The OData route prefix '{0}' on the controller '{1}' starts with a '/'. Route prefixes cannot start with a '/'.</value>
  </data>
  <data name="FunctionNotBoundToEntity" xml:space="preserve">
    <value>The function '{0}' is not bound to an entity. Only functions that are bound to entities can have function links.</value>
  </data>
  <data name="FunctionNotBoundToCollectionOfEntity" xml:space="preserve">
    <value>The function '{0}' is not bound to the collection of entity. Only functions that are bound to entities can have function links.</value>
  </data>
  <data name="MoreThanOneOverloadActionBoundToSameTypeFound" xml:space="preserve">
    <value>Found more than one action with name '{0}' bound to the same type '{1}'. Each bound action must have a different binding type or name.</value>
  </data>
  <data name="MoreThanOneUnboundActionFound" xml:space="preserve">
    <value>Found more than one unbound action with name '{0}'. Each unbound action must have an unique action name.</value>
  </data>
  <data name="OperationHasInvalidEntitySetPath" xml:space="preserve">
    <value>Invalid EntitySetPath detected. '{0}' is not a valid entity set path for operation '{1}'.</value>
  </data>
  <data name="FunctionParameterNotFound" xml:space="preserve">
    <value>The function parameter '{0}' cannot be found.</value>
  </data>
  <data name="OperationSegmentMustBeFunction" xml:space="preserve">
    <value>The operation segment must be a function segment.</value>
  </data>
  <data name="OperationImportSegmentMustBeFunction" xml:space="preserve">
    <value>The operation import segment must be a function import segment.</value>
  </data>
  <data name="InvalidETagHandler" xml:space="preserve">
    <value>The ETag handler set in the configuration property is of type '{0}', which does not implement IETagHandler.</value>
  </data>
  <data name="NullETagHandler" xml:space="preserve">
    <value>The ETag handler set in the configuration property must not be null.</value>
  </data>
  <data name="InvalidTimeZoneInfo" xml:space="preserve">
    <value>The time zone info set in the configuration property is of type '{0}'. The time zone info type must be type '{1}'.</value>
  </data>
  <data name="CannotApplyETagOfT" xml:space="preserve">
    <value>Cannot apply {0} of '{1}' to {2} of '{3}'.</value>
  </data>
  <data name="ETagNotWellFormed" xml:space="preserve">
    <value>The ETag is not well-formed.</value>
  </data>
  <data name="NotFilterablePropertyUsedInFilter" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $filter query option.</value>
  </data>
  <data name="NotSortablePropertyUsedInOrderBy" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $orderby query option.</value>
  </data>
  <data name="NotExpandablePropertyUsedInExpand" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $expand query option.</value>
  </data>
  <data name="NotSelectablePropertyUsedInSelect" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $select query option.</value>
  </data>
  <data name="NotNavigablePropertyUsedInNavigation" xml:space="preserve">
    <value>The property '{0}' cannot be used for navigation.</value>
  </data>
  <data name="NotCountablePropertyUsedForCount" xml:space="preserve">
    <value>The property '{0}' cannot be used for $count.</value>
  </data>
  <data name="NotCountableEntitySetUsedForCount" xml:space="preserve">
    <value>The entity set '{0}' cannot be used for $count.</value>
  </data>
  <data name="EntityTypeDoesntHaveKeyDefined" xml:space="preserve">
    <value>The entity '{0}' does not have a key defined.</value>
  </data>
  <data name="InvalidPropertyMapper" xml:space="preserve">
    <value>The mapper provider must return a valid '{0}' instance for the given '{1}' IEdmType.</value>
  </data>
  <data name="InvalidPropertyMapping" xml:space="preserve">
    <value>The key mapping for the property '{0}' can't be null or empty.</value>
  </data>
  <data name="InvalidSingletonName" xml:space="preserve">
    <value>'{0}' is not a valid singleton name. The singleton name cannot contain '.'.</value>
  </data>
  <data name="SingletonAlreadyConfiguredDifferentEntityType" xml:space="preserve">
    <value>The singleton '{0}' was already configured with a different EntityType ('{1}').</value>
  </data>
  <data name="EntitySetNameAlreadyConfiguredAsSingleton" xml:space="preserve">
    <value>The entity set name '{0}' was already configured as a singleton.</value>
  </data>
  <data name="SingletonNameAlreadyConfiguredAsEntitySet" xml:space="preserve">
    <value>The singleton name '{0}' was already configured as an entity set.</value>
  </data>
  <data name="NavigationSourceMissingDuringSerialization" xml:space="preserve">
    <value>The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to serialize the payload.</value>
  </data>
  <data name="NavigationSourceMissingDuringDeserialization" xml:space="preserve">
    <value>The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to deserialize the payload.</value>
  </data>
  <data name="Object_NotYetInitialized" xml:space="preserve">
    <value>The object has not yet been initialized. Ensure that HttpConfiguration.EnsureInitialized() is called in the application's startup code after all other initialization code.</value>
  </data>
  <data name="MoreThanOneDynamicPropertyContainerFound" xml:space="preserve">
    <value>Found more than one dynamic property container in type '{0}'. Each open type must have at most one dynamic property container.</value>
  </data>
  <data name="DynamicPropertyNameAlreadyUsedAsDeclaredPropertyName" xml:space="preserve">
    <value>The name of dynamic property '{0}' was already used as the declared property name of open type '{1}'.</value>
  </data>
  <data name="DuplicateDynamicPropertyNameFound" xml:space="preserve">
    <value>Duplicate dynamic property name '{0}' found in open type '{1}'. Each dynamic property name must be unique.</value>
  </data>
  <data name="CannotSetDynamicPropertyDictionary" xml:space="preserve">
    <value>The dynamic dictionary property '{0}' of type '{1}' cannot be set. The dynamic property dictionary must have a setter.</value>
  </data>
  <data name="InvalidPropertyInfoForDynamicPropertyAnnotation" xml:space="preserve">
    <value>Type '{0}' is not supported as dynamic property annotation. Referenced property must be of type '{1}'.</value>
  </data>
  <data name="RequestUriTooShortForODataPath" xml:space="preserve">
    <value>Request URI '{0}' too short to contain OData path '{1}'.</value>
  </data>
  <data name="ODataPathNotFound" xml:space="preserve">
    <value>Request URI '{0}' does not contain OData path '{1}'.</value>
  </data>
  <data name="IdLinkNullForEntityIdHeader" xml:space="preserve">
    <value>The Id link builder for the entity set '{0}' returned null. An Id link is required for the OData-EntityId header.</value>
  </data>
  <data name="NestedCollectionsNotSupported" xml:space="preserve">
    <value>The type '{0}' is a nested collection type. Nested collection types are not allowed.</value>
  </data>
  <data name="DynamicPropertyCannotBeSerialized" xml:space="preserve">
    <value>The dynamic property '{0}' with Edm type '{1}' cannot be serialized.</value>
  </data>
  <data name="TypeOfDynamicPropertyNotSupported" xml:space="preserve">
    <value>The type '{0}' of dynamic property '{1}' is not supported.</value>
  </data>
  <data name="CannotReconfigEntityTypeAsComplexType" xml:space="preserve">
    <value>The entity type '{0}' cannot be configured as a complex type because the derived type '{1}' is already configured as an entity type.</value>
  </data>
  <data name="CannotInferEdmType" xml:space="preserve">
    <value>Cannot determine the Edm type for the CLR type '{0}' because the derived type '{1}' is configured as entity type and another derived type '{2}' is configured as complex type.</value>
  </data>
  <data name="DependentAndPrincipalTypeNotMatch" xml:space="preserve">
    <value>The dependent property type '{0}' is not same as the principal property type '{1}. The dependent and principal properties must have must have same types in the same order.</value>
  </data>
  <data name="ReferentialConstraintPropertyTypeNotValid" xml:space="preserve">
    <value>The property type '{0}' of the referential constraint is not valid. The referential constraint property type must be primitive type.</value>
  </data>
  <data name="ReferentialConstraintOnManyNavigationPropertyNotSupported" xml:space="preserve">
    <value>Referential constraint for navigation property '{0}' on type '{1}' is not supported. Only required or optional navigation properties support referential constraint.</value>
  </data>
  <data name="ReferentialConstraintAlreadyConfigured" xml:space="preserve">
    <value>The '{0}' property '{1}' is already configured to have a relationship with '{2}' property '{3}' in the referential constraint.</value>
  </data>
  <data name="NavigationSourceTypeHasNoKeys" xml:space="preserve">
    <value>The entity set or singleton '{0}' is based on type '{1}' that has no keys defined.</value>
  </data>
  <data name="ParameterTypeIsNotCollection" xml:space="preserve">
    <value>The type '{0}' of the parameter '{1}' must be a collection.</value>
  </data>
  <data name="EntityReferenceMustHasKeySegment" xml:space="preserve">
    <value>The Uri '{0}' in the parameter is invalid.</value>
  </data>
  <data name="CollectionParameterShouldHaveAddMethod" xml:space="preserve">
    <value>The type '{0}' of the parameter '{1}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.</value>
  </data>
  <data name="InvalidAttributeRoutingTemplateSegment" xml:space="preserve">
    <value>The attribute routing template contains invalid segment '{0}'.</value>
  </data>
  <data name="AggregationMethodNotSupported" xml:space="preserve">
    <value>Aggregation method '{0}' is not supported.</value>
  </data>
  <data name="AggregationNotSupportedForType" xml:space="preserve">
    <value>Aggregation '{0}' not supported for property '{1}' of type '{2}'.</value>
  </data>
  <data name="NotSupportedTransformationKind" xml:space="preserve">
    <value>Transformation kind {0} is not supported.</value>
  </data>
  <data name="UriFunctionClrBinderAlreadyBound" xml:space="preserve">
    <value>The function '{0}' is already bound to another method.</value>
  </data>
  <data name="NullOnNonNullableFunctionParameter" xml:space="preserve">
    <value>Type verification failed. Expected non-nullable type '{0}' but received a null value.</value>
  </data>
  <data name="NullContainer" xml:space="preserve">
    <value>The container built by the container builder must not be null.</value>
  </data>
  <data name="NullContainerBuilder" xml:space="preserve">
    <value>The container builder created by the container builder factory must not be null.</value>
  </data>
  <data name="InvalidODataUntypedValue" xml:space="preserve">
    <value>The given untyped value '{0}' in payload is invalid. Consider using a OData type annotation explicitly.</value>
  </data>
  <data name="DynamicResourceSetTypeNameIsRequired" xml:space="preserve">
    <value>The type name of the dynamic resource set '{0}' is required and cannot be empty. Consider using a OData type annotation explicitly.</value>
  </data>
  <data name="CannotReEnableDependencyInjection" xml:space="preserve">
    <value>Cannot re-enable dependency injection for HTTP routes.</value>
  </data>
  <data name="NoNonODataHttpRouteRegistered" xml:space="preserve">
    <value>No non-OData HTTP route registered.</value>
  </data>
  <data name="RequestContainerAlreadyExists" xml:space="preserve">
    <value>A request container already exists on the request.</value>
  </data>
  <data name="NavigationPropertyBindingPathIsNotValid" xml:space="preserve">
    <value>The navigation property binding path '{0}' is not valid. The last segment must be the navigation property '{1}'.</value>
  </data>
  <data name="NavigationPropertyBindingPathNotSupported" xml:space="preserve">
    <value>The navigation property binding path segment '{0}' of member type '{1}' is not supported.</value>
  </data>
  <data name="NavigationPropertyBindingPathNotInHierarchy" xml:space="preserve">
    <value>The type '{0}' of the binding type cast segment '{1}' is not a part of the type '{2}' hierarchy.</value>
  </data>
  <data name="PropertyOrPathWasRemovedFromContext" xml:space="preserve">
    <value>Property or path {0} isn't available in the current context. It was removed in earlier transformation.</value>
  </data>
  <data name="ExpandFilterExpressionNotLambdaExpression" xml:space="preserve">
    <value>$filter in $expand of reference navigation property '{0}' is not expected type '{1}'</value>
  </data>
  <data name="ReferenceNavigationPropertyExpandFilterVisitorUnexpectedParameter" xml:space="preserve">
    <value>Found unexpected parameter '{0}'.</value>
  </data>
</root>