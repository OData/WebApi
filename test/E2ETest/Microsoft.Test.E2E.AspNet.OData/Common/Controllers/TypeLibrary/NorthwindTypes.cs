//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Microsoft.Test.E2E.AspNet.OData.Common.Controllers.TypeLibrary
{
    //   These types are auto-generated from Visual Studio ADO.NET Entity Data Model from the popular Northwind database
    //   I have made 2 modifications to these generated Entity Types
    //   1.  Replacing EntityCollection<T> to List<T> due to Bug 373015
    //   2.  Commented out the implementation of the getter and setter of the Navigation Properties 
    //       so that they don't actually talk to the database to get any relational information
    //   3.  Remove all the 'Contexts' related code

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Category")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Category : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String categoryName)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.CategoryName = categoryName;
            return category;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.Byte[] Picture
        {
            get
            {
                return StructuralObject.GetValidValue(_Picture);
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.Byte[] _Picture;
        partial void OnPictureChanging(global::System.Byte[] value);
        partial void OnPictureChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Products_Categories", "Products")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Product> Products { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("northwindModel.FK_Products_Categories", "Products");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("northwindModel.FK_Products_Categories", "Products", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Customer")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Customer CreateCustomer(global::System.String customerID, global::System.String companyName)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.CompanyName = companyName;
            return customer;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String CustomerID { get; set; }
        //{
        //    get
        //    {
        //        return _CustomerID;
        //    }
        //    set
        //    {
        //        if (_CustomerID != value)
        //        {
        //            OnCustomerIDChanging(value);
        //            ReportPropertyChanging("CustomerID");
        //            _CustomerID = StructuralObject.SetValidValue(value, false);
        //            ReportPropertyChanged("CustomerID");
        //            OnCustomerIDChanged();
        //        }
        //    }
        //}
        //private global::System.String _CustomerID;
        partial void OnCustomerIDChanging(global::System.String value);
        partial void OnCustomerIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String CompanyName { get; set; }
        //{
        //    get
        //    {
        //        return _CompanyName;
        //    }
        //    set
        //    {
        //        OnCompanyNameChanging(value);
        //        ReportPropertyChanging("CompanyName");
        //        _CompanyName = StructuralObject.SetValidValue(value, false);
        //        ReportPropertyChanged("CompanyName");
        //        OnCompanyNameChanged();
        //    }
        //}
        //private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ContactName { get; set; }
        //{
        //    get
        //    {
        //        return _ContactName;
        //    }
        //    set
        //    {
        //        OnContactNameChanging(value);
        //        ReportPropertyChanging("ContactName");
        //        _ContactName = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("ContactName");
        //        OnContactNameChanged();
        //    }
        //}
        //private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ContactTitle { get; set; }
        //{
        //    get
        //    {
        //        return _ContactTitle;
        //    }
        //    set
        //    {
        //        OnContactTitleChanging(value);
        //        ReportPropertyChanging("ContactTitle");
        //        _ContactTitle = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("ContactTitle");
        //        OnContactTitleChanged();
        //    }
        //}
        //private global::System.String _ContactTitle;
        partial void OnContactTitleChanging(global::System.String value);
        partial void OnContactTitleChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Address { get; set; }
        //{
        //    get
        //    {
        //        return _Address;
        //    }
        //    set
        //    {
        //        OnAddressChanging(value);
        //        ReportPropertyChanging("Address");
        //        _Address = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Address");
        //        OnAddressChanged();
        //    }
        //}
        //private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String City { get; set; }
        //{
        //    get
        //    {
        //        return _City;
        //    }
        //    set
        //    {
        //        OnCityChanging(value);
        //        ReportPropertyChanging("City");
        //        _City = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("City");
        //        OnCityChanged();
        //    }
        //}
        //private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Region { get; set; }
        //{
        //    get
        //    {
        //        return _Region;
        //    }
        //    set
        //    {
        //        OnRegionChanging(value);
        //        ReportPropertyChanging("Region");
        //        _Region = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Region");
        //        OnRegionChanged();
        //    }
        //}
        //private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String PostalCode { get; set; }
        //{
        //    get
        //    {
        //        return _PostalCode;
        //    }
        //    set
        //    {
        //        OnPostalCodeChanging(value);
        //        ReportPropertyChanging("PostalCode");
        //        _PostalCode = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("PostalCode");
        //        OnPostalCodeChanged();
        //    }
        //}
        //private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Country { get; set; }

        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Phone { get; set; }
        //{
        //    get
        //    {
        //        return _Phone;
        //    }
        //    set
        //    {
        //        OnPhoneChanging(value);
        //        ReportPropertyChanging("Phone");
        //        _Phone = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Phone");
        //        OnPhoneChanged();
        //    }
        //}
        //private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Fax { get; set; }
        //{
        //    get
        //    {
        //        return _Fax;
        //    }
        //    set
        //    {
        //        OnFaxChanging(value);
        //        ReportPropertyChanging("Fax");
        //        _Fax = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Fax");
        //        OnFaxChanged();
        //    }
        //}
        //private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Orders_Customers", "Orders")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Order> Orders { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("northwindModel.FK_Orders_Customers", "Orders");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("northwindModel.FK_Orders_Customers", "Orders", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "CustomerCustomerDemo", "CustomerDemographics")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<CustomerDemographic> CustomerDemographics { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerDemographic>("northwindModel.CustomerCustomerDemo", "CustomerDemographics");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerDemographic>("northwindModel.CustomerCustomerDemo", "CustomerDemographics", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "CustomerDemographic")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class CustomerDemographic : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomerDemographic object.
        /// </summary>
        /// <param name="customerTypeID">Initial value of the CustomerTypeID property.</param>
        public static CustomerDemographic CreateCustomerDemographic(global::System.String customerTypeID)
        {
            CustomerDemographic customerDemographic = new CustomerDemographic();
            customerDemographic.CustomerTypeID = customerTypeID;
            return customerDemographic;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String CustomerTypeID
        {
            get
            {
                return _CustomerTypeID;
            }
            set
            {
                if (_CustomerTypeID != value)
                {
                    OnCustomerTypeIDChanging(value);
                    ReportPropertyChanging("CustomerTypeID");
                    _CustomerTypeID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CustomerTypeID");
                    OnCustomerTypeIDChanged();
                }
            }
        }
        private global::System.String _CustomerTypeID;
        partial void OnCustomerTypeIDChanging(global::System.String value);
        partial void OnCustomerTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String CustomerDesc
        {
            get
            {
                return _CustomerDesc;
            }
            set
            {
                OnCustomerDescChanging(value);
                ReportPropertyChanging("CustomerDesc");
                _CustomerDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerDesc");
                OnCustomerDescChanged();
            }
        }
        private global::System.String _CustomerDesc;
        partial void OnCustomerDescChanging(global::System.String value);
        partial void OnCustomerDescChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "CustomerCustomerDemo", "Customers")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Customer> Customers { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("northwindModel.CustomerCustomerDemo", "Customers");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("northwindModel.CustomerCustomerDemo", "Customers", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Employee")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeID, global::System.String lastName, global::System.String firstName)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.LastName = lastName;
            employee.FirstName = firstName;
            return employee;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String FirstName { get; set; }
        //{
        //    get
        //    {
        //        return _FirstName;
        //    }
        //    set
        //    {
        //        OnFirstNameChanging(value);
        //        ReportPropertyChanging("FirstName");
        //        _FirstName = StructuralObject.SetValidValue(value, false);
        //        ReportPropertyChanged("FirstName");
        //        OnFirstNameChanged();
        //    }
        //}
        //private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Title { get; set; }
        //{
        //    get
        //    {
        //        return _Title;
        //    }
        //    set
        //    {
        //        OnTitleChanging(value);
        //        ReportPropertyChanging("Title");
        //        _Title = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Title");
        //        OnTitleChanged();
        //    }
        //}
        //private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String TitleOfCourtesy { get; set; }
        //{
        //    get
        //    {
        //        return _TitleOfCourtesy;
        //    }
        //    set
        //    {
        //        OnTitleOfCourtesyChanging(value);
        //        ReportPropertyChanging("TitleOfCourtesy");
        //        _TitleOfCourtesy = StructuralObject.SetValidValue(value, true);
        ////        ReportPropertyChanged("TitleOfCourtesy");
        //        OnTitleOfCourtesyChanged();
        //    }
        //}
        //private global::System.String _TitleOfCourtesy;
        partial void OnTitleOfCourtesyChanging(global::System.String value);
        partial void OnTitleOfCourtesyChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.DateTime> BirthDate { get; set; }
        //{
        //    get
        //    {
        //        return _BirthDate;
        //    }
        //    set
        //    {
        //        OnBirthDateChanging(value);
        //        ReportPropertyChanging("BirthDate");
        //        _BirthDate = StructuralObject.SetValidValue(value);
        //        ReportPropertyChanged("BirthDate");
        //        OnBirthDateChanged();
        //    }
        //}
        //private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.DateTime> HireDate { get; set; }
        //{
        //    get
        //    {
        //        return _HireDate;
        //    }
        //    set
        //    {
        //        OnHireDateChanging(value);
        //        ReportPropertyChanging("HireDate");
        //        _HireDate = StructuralObject.SetValidValue(value);
        //        ReportPropertyChanged("HireDate");
        //        OnHireDateChanged();
        //    }
        //}
        //private Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Address { get; set; }
        //{
        //    get
        //    {
        //        return _Address;
        //    }
        //    set
        //    {
        //        OnAddressChanging(value);
        //        ReportPropertyChanging("Address");
        //        _Address = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Address");
        //        OnAddressChanged();
        //    }
        //}
        //private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String City { get; set; }
        //{
        //    get
        //    {
        //        return _City;
        //    }
        //    set
        //    {
        //        OnCityChanging(value);
        //        ReportPropertyChanging("City");
        //        _City = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("City");
        //        OnCityChanged();
        //    }
        //}
        //private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Region { get; set; }
        //{
        //    get
        //    {
        //        return _Region;
        //    }
        //    set
        //    {
        //        OnRegionChanging(value);
        //        ReportPropertyChanging("Region");
        //        _Region = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Region");
        //        OnRegionChanged();
        //    }
        //}
        //private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String PostalCode { get; set; }
        //{
        //    get
        //    {
        //        return _PostalCode;
        //    }
        //    set
        //    {
        //        OnPostalCodeChanging(value);
        //        ReportPropertyChanging("PostalCode");
        //        _PostalCode = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("PostalCode");
        //        OnPostalCodeChanged();
        //    }
        //}
        //private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Country { get; set; }

        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String HomePhone { get; set; }
        //{
        //    get
        //    {
        //        return _HomePhone;
        //    }
        //    set
        //    {
        //        OnHomePhoneChanging(value);
        //        ReportPropertyChanging("HomePhone");
        //        _HomePhone = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("HomePhone");
        //        OnHomePhoneChanged();
        //    }
        //}
        //private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Extension { get; set; }
        //{
        //    get
        //    {
        //        return _Extension;
        //    }
        //    set
        //    {
        //        OnExtensionChanging(value);
        //        ReportPropertyChanging("Extension");
        //        _Extension = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Extension");
        //        OnExtensionChanged();
        //    }
        //}
        //private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.Byte[] Photo { get; set; }
        //{
        //    get
        //    {
        //        return StructuralObject.GetValidValue(_Photo);
        //    }
        //    set
        //    {
        //        OnPhotoChanging(value);
        //        ReportPropertyChanging("Photo");
        //        _Photo = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Photo");
        //        OnPhotoChanged();
        //    }
        //}
        //private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Notes { get; set; }
        //{
        //    get
        //    {
        //        return _Notes;
        //    }
        //    set
        //    {
        //        OnNotesChanging(value);
        //        ReportPropertyChanging("Notes");
        //        _Notes = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("Notes");
        //        OnNotesChanged();
        //    }
        //}
        //private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int32> ReportsTo { get; set; }
        //{
        //    get
        //    {
        //        return _ReportsTo;
        //    }
        //    set
        //    {
        //        OnReportsToChanging(value);
        //        ReportPropertyChanging("ReportsTo");
        //        _ReportsTo = StructuralObject.SetValidValue(value);
        //        ReportPropertyChanged("ReportsTo");
        //        OnReportsToChanged();
        //    }
        //}
        //private Nullable<global::System.Int32> _ReportsTo;
        partial void OnReportsToChanging(Nullable<global::System.Int32> value);
        partial void OnReportsToChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String PhotoPath { get; set; }
        //{
        //    get
        //    {
        //        return _PhotoPath;
        //    }
        //    set
        //    {
        //        OnPhotoPathChanging(value);
        //        ReportPropertyChanging("PhotoPath");
        //        _PhotoPath = StructuralObject.SetValidValue(value, true);
        //        ReportPropertyChanged("PhotoPath");
        //        OnPhotoPathChanged();
        //    }
        //}
        //private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Employees_Employees", "Employees1")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Employee> Employees1 { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("northwindModel.FK_Employees_Employees", "Employees1");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("northwindModel.FK_Employees_Employees", "Employees1", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Employees_Employees", "Employees")]
        public Employee Employee1 { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("northwindModel.FK_Employees_Employees", "Employees").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("northwindModel.FK_Employees_Employees", "Employees").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Employee> Employee1Reference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("northwindModel.FK_Employees_Employees", "Employees");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("northwindModel.FK_Employees_Employees", "Employees", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Orders_Employees", "Orders")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Order> Orders { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("northwindModel.FK_Orders_Employees", "Orders");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("northwindModel.FK_Orders_Employees", "Orders", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "EmployeeTerritories", "Territories")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Territory> Territories { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Territory>("northwindModel.EmployeeTerritories", "Territories");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Territory>("northwindModel.EmployeeTerritories", "Territories", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Order")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Order : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static Order CreateOrder(global::System.Int32 orderID)
        {
            Order order = new Order();
            order.OrderID = orderID;
            return order;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.String _CustomerID;
        partial void OnCustomerIDChanging(global::System.String value);
        partial void OnCustomerIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.DateTime> OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderDate;
        partial void OnOrderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.DateTime> RequiredDate
        {
            get
            {
                return _RequiredDate;
            }
            set
            {
                OnRequiredDateChanging(value);
                ReportPropertyChanging("RequiredDate");
                _RequiredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredDate");
                OnRequiredDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequiredDate;
        partial void OnRequiredDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequiredDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.DateTime> ShippedDate
        {
            get
            {
                return _ShippedDate;
            }
            set
            {
                OnShippedDateChanging(value);
                ReportPropertyChanging("ShippedDate");
                _ShippedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShippedDate");
                OnShippedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShippedDate;
        partial void OnShippedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnShippedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int32> ShipVia
        {
            get
            {
                return _ShipVia;
            }
            set
            {
                OnShipViaChanging(value);
                ReportPropertyChanging("ShipVia");
                _ShipVia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShipVia");
                OnShipViaChanged();
            }
        }
        private Nullable<global::System.Int32> _ShipVia;
        partial void OnShipViaChanging(Nullable<global::System.Int32> value);
        partial void OnShipViaChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Decimal> Freight
        {
            get
            {
                return _Freight;
            }
            set
            {
                OnFreightChanging(value);
                ReportPropertyChanging("Freight");
                _Freight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Freight");
                OnFreightChanged();
            }
        }
        private Nullable<global::System.Decimal> _Freight;
        partial void OnFreightChanging(Nullable<global::System.Decimal> value);
        partial void OnFreightChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ShipName
        {
            get
            {
                return _ShipName;
            }
            set
            {
                OnShipNameChanging(value);
                ReportPropertyChanging("ShipName");
                _ShipName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShipName");
                OnShipNameChanged();
            }
        }
        private global::System.String _ShipName;
        partial void OnShipNameChanging(global::System.String value);
        partial void OnShipNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ShipAddress
        {
            get
            {
                return _ShipAddress;
            }
            set
            {
                OnShipAddressChanging(value);
                ReportPropertyChanging("ShipAddress");
                _ShipAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShipAddress");
                OnShipAddressChanged();
            }
        }
        private global::System.String _ShipAddress;
        partial void OnShipAddressChanging(global::System.String value);
        partial void OnShipAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ShipCity
        {
            get
            {
                return _ShipCity;
            }
            set
            {
                OnShipCityChanging(value);
                ReportPropertyChanging("ShipCity");
                _ShipCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShipCity");
                OnShipCityChanged();
            }
        }
        private global::System.String _ShipCity;
        partial void OnShipCityChanging(global::System.String value);
        partial void OnShipCityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ShipRegion
        {
            get
            {
                return _ShipRegion;
            }
            set
            {
                OnShipRegionChanging(value);
                ReportPropertyChanging("ShipRegion");
                _ShipRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShipRegion");
                OnShipRegionChanged();
            }
        }
        private global::System.String _ShipRegion;
        partial void OnShipRegionChanging(global::System.String value);
        partial void OnShipRegionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ShipPostalCode
        {
            get
            {
                return _ShipPostalCode;
            }
            set
            {
                OnShipPostalCodeChanging(value);
                ReportPropertyChanging("ShipPostalCode");
                _ShipPostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShipPostalCode");
                OnShipPostalCodeChanged();
            }
        }
        private global::System.String _ShipPostalCode;
        partial void OnShipPostalCodeChanging(global::System.String value);
        partial void OnShipPostalCodeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ShipCountry
        {
            get
            {
                return _ShipCountry;
            }
            set
            {
                OnShipCountryChanging(value);
                ReportPropertyChanging("ShipCountry");
                _ShipCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShipCountry");
                OnShipCountryChanged();
            }
        }
        private global::System.String _ShipCountry;
        partial void OnShipCountryChanging(global::System.String value);
        partial void OnShipCountryChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Orders_Customers", "Customers")]
        public Customer Customer { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("northwindModel.FK_Orders_Customers", "Customers").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("northwindModel.FK_Orders_Customers", "Customers").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Customer> CustomerReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("northwindModel.FK_Orders_Customers", "Customers");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("northwindModel.FK_Orders_Customers", "Customers", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Orders_Employees", "Employees")]
        public Employee Employee { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("northwindModel.FK_Orders_Employees", "Employees").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("northwindModel.FK_Orders_Employees", "Employees").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Employee> EmployeeReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("northwindModel.FK_Orders_Employees", "Employees");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("northwindModel.FK_Orders_Employees", "Employees", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Order_Details_Orders", "Order_Details")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Order_Detail> Order_Details { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order_Detail>("northwindModel.FK_Order_Details_Orders", "Order_Details");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order_Detail>("northwindModel.FK_Order_Details_Orders", "Order_Details", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Orders_Shippers", "Shippers")]
        public Shipper Shipper { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipper>("northwindModel.FK_Orders_Shippers", "Shippers").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipper>("northwindModel.FK_Orders_Shippers", "Shippers").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Shipper> ShipperReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipper>("northwindModel.FK_Orders_Shippers", "Shippers");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shipper>("northwindModel.FK_Orders_Shippers", "Shippers", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Order_Detail")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Order_Detail : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Order_Detail object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="discount">Initial value of the Discount property.</param>
        public static Order_Detail CreateOrder_Detail(global::System.Int32 orderID, global::System.Int32 productID, global::System.Decimal unitPrice, global::System.Int16 quantity, global::System.Single discount)
        {
            Order_Detail order_Detail = new Order_Detail();
            order_Detail.OrderID = orderID;
            order_Detail.ProductID = productID;
            order_Detail.UnitPrice = unitPrice;
            order_Detail.Quantity = quantity;
            order_Detail.Discount = discount;
            return order_Detail;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int16 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int16 _Quantity;
        partial void OnQuantityChanging(global::System.Int16 value);
        partial void OnQuantityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Single Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private global::System.Single _Discount;
        partial void OnDiscountChanging(global::System.Single value);
        partial void OnDiscountChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Order_Details_Orders", "Orders")]
        public Order Order { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("northwindModel.FK_Order_Details_Orders", "Orders").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("northwindModel.FK_Order_Details_Orders", "Orders").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Order> OrderReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("northwindModel.FK_Order_Details_Orders", "Orders");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("northwindModel.FK_Order_Details_Orders", "Orders", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Order_Details_Products", "Products")]
        public Product Product { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("northwindModel.FK_Order_Details_Products", "Products").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("northwindModel.FK_Order_Details_Products", "Products").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Product> ProductReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("northwindModel.FK_Order_Details_Products", "Products");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("northwindModel.FK_Order_Details_Products", "Products", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Product")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Product : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="discontinued">Initial value of the Discontinued property.</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.String productName, global::System.Boolean discontinued)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.ProductName = productName;
            product.Discontinued = discontinued;
            return product;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String QuantityPerUnit
        {
            get
            {
                return _QuantityPerUnit;
            }
            set
            {
                OnQuantityPerUnitChanging(value);
                ReportPropertyChanging("QuantityPerUnit");
                _QuantityPerUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityPerUnit");
                OnQuantityPerUnitChanged();
            }
        }
        private global::System.String _QuantityPerUnit;
        partial void OnQuantityPerUnitChanging(global::System.String value);
        partial void OnQuantityPerUnitChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int16> UnitsInStock
        {
            get
            {
                return _UnitsInStock;
            }
            set
            {
                OnUnitsInStockChanging(value);
                ReportPropertyChanging("UnitsInStock");
                _UnitsInStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitsInStock");
                OnUnitsInStockChanged();
            }
        }
        private Nullable<global::System.Int16> _UnitsInStock;
        partial void OnUnitsInStockChanging(Nullable<global::System.Int16> value);
        partial void OnUnitsInStockChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int16> UnitsOnOrder
        {
            get
            {
                return _UnitsOnOrder;
            }
            set
            {
                OnUnitsOnOrderChanging(value);
                ReportPropertyChanging("UnitsOnOrder");
                _UnitsOnOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitsOnOrder");
                OnUnitsOnOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _UnitsOnOrder;
        partial void OnUnitsOnOrderChanging(Nullable<global::System.Int16> value);
        partial void OnUnitsOnOrderChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public Nullable<global::System.Int16> ReorderLevel
        {
            get
            {
                return _ReorderLevel;
            }
            set
            {
                OnReorderLevelChanging(value);
                ReportPropertyChanging("ReorderLevel");
                _ReorderLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReorderLevel");
                OnReorderLevelChanged();
            }
        }
        private Nullable<global::System.Int16> _ReorderLevel;
        partial void OnReorderLevelChanging(Nullable<global::System.Int16> value);
        partial void OnReorderLevelChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Boolean Discontinued
        {
            get
            {
                return _Discontinued;
            }
            set
            {
                OnDiscontinuedChanging(value);
                ReportPropertyChanging("Discontinued");
                _Discontinued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discontinued");
                OnDiscontinuedChanged();
            }
        }
        private global::System.Boolean _Discontinued;
        partial void OnDiscontinuedChanging(global::System.Boolean value);
        partial void OnDiscontinuedChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Products_Categories", "Categories")]
        public Category Category { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("northwindModel.FK_Products_Categories", "Categories").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("northwindModel.FK_Products_Categories", "Categories").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Category> CategoryReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("northwindModel.FK_Products_Categories", "Categories");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("northwindModel.FK_Products_Categories", "Categories", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Order_Details_Products", "Order_Details")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Order_Detail> Order_Details { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order_Detail>("northwindModel.FK_Order_Details_Products", "Order_Details");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order_Detail>("northwindModel.FK_Order_Details_Products", "Order_Details", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Products_Suppliers", "Suppliers")]
        public Supplier Supplier { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("northwindModel.FK_Products_Suppliers", "Suppliers").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("northwindModel.FK_Products_Suppliers", "Suppliers").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Supplier> SupplierReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("northwindModel.FK_Products_Suppliers", "Suppliers");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("northwindModel.FK_Products_Suppliers", "Suppliers", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Region")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Region : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="regionID">Initial value of the RegionID property.</param>
        /// <param name="regionDescription">Initial value of the RegionDescription property.</param>
        public static Region CreateRegion(global::System.Int32 regionID, global::System.String regionDescription)
        {
            Region region = new Region();
            region.RegionID = regionID;
            region.RegionDescription = regionDescription;
            return region;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                if (_RegionID != value)
                {
                    OnRegionIDChanging(value);
                    ReportPropertyChanging("RegionID");
                    _RegionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionID");
                    OnRegionIDChanged();
                }
            }
        }
        private global::System.Int32 _RegionID;
        partial void OnRegionIDChanging(global::System.Int32 value);
        partial void OnRegionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String RegionDescription
        {
            get
            {
                return _RegionDescription;
            }
            set
            {
                OnRegionDescriptionChanging(value);
                ReportPropertyChanging("RegionDescription");
                _RegionDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegionDescription");
                OnRegionDescriptionChanged();
            }
        }
        private global::System.String _RegionDescription;
        partial void OnRegionDescriptionChanging(global::System.String value);
        partial void OnRegionDescriptionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Territories_Region", "Territories")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Territory> Territories { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Territory>("northwindModel.FK_Territories_Region", "Territories");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Territory>("northwindModel.FK_Territories_Region", "Territories", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Shipper")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Shipper : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Shipper object.
        /// </summary>
        /// <param name="shipperID">Initial value of the ShipperID property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Shipper CreateShipper(global::System.Int32 shipperID, global::System.String companyName)
        {
            Shipper shipper = new Shipper();
            shipper.ShipperID = shipperID;
            shipper.CompanyName = companyName;
            return shipper;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 ShipperID
        {
            get
            {
                return _ShipperID;
            }
            set
            {
                if (_ShipperID != value)
                {
                    OnShipperIDChanging(value);
                    ReportPropertyChanging("ShipperID");
                    _ShipperID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShipperID");
                    OnShipperIDChanged();
                }
            }
        }
        private global::System.Int32 _ShipperID;
        partial void OnShipperIDChanging(global::System.Int32 value);
        partial void OnShipperIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Orders_Shippers", "Orders")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Order> Orders { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("northwindModel.FK_Orders_Shippers", "Orders");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("northwindModel.FK_Orders_Shippers", "Orders", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Supplier")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Supplier CreateSupplier(global::System.Int32 supplierID, global::System.String companyName)
        {
            Supplier supplier = new Supplier();
            supplier.SupplierID = supplierID;
            supplier.CompanyName = companyName;
            return supplier;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                if (_SupplierID != value)
                {
                    OnSupplierIDChanging(value);
                    ReportPropertyChanging("SupplierID");
                    _SupplierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SupplierID");
                    OnSupplierIDChanged();
                }
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String ContactTitle
        {
            get
            {
                return _ContactTitle;
            }
            set
            {
                OnContactTitleChanging(value);
                ReportPropertyChanging("ContactTitle");
                _ContactTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactTitle");
                OnContactTitleChanged();
            }
        }
        private global::System.String _ContactTitle;
        partial void OnContactTitleChanging(global::System.String value);
        partial void OnContactTitleChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Country { get; set; }

        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute]
        public global::System.String HomePage
        {
            get
            {
                return _HomePage;
            }
            set
            {
                OnHomePageChanging(value);
                ReportPropertyChanging("HomePage");
                _HomePage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePage");
                OnHomePageChanged();
            }
        }
        private global::System.String _HomePage;
        partial void OnHomePageChanging(global::System.String value);
        partial void OnHomePageChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Products_Suppliers", "Products")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Product> Products { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("northwindModel.FK_Products_Suppliers", "Products");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("northwindModel.FK_Products_Suppliers", "Products", value);
        //        }
        //    }
        //}

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "northwindModel", Name = "Territory")]
    [Serializable]
    [DataContractAttribute(IsReference = true)]
    public partial class Territory : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Territory object.
        /// </summary>
        /// <param name="territoryID">Initial value of the TerritoryID property.</param>
        /// <param name="territoryDescription">Initial value of the TerritoryDescription property.</param>
        /// <param name="regionID">Initial value of the RegionID property.</param>
        public static Territory CreateTerritory(global::System.String territoryID, global::System.String territoryDescription, global::System.Int32 regionID)
        {
            Territory territory = new Territory();
            territory.TerritoryID = territoryID;
            territory.TerritoryDescription = territoryDescription;
            territory.RegionID = regionID;
            return territory;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String TerritoryID
        {
            get
            {
                return _TerritoryID;
            }
            set
            {
                if (_TerritoryID != value)
                {
                    OnTerritoryIDChanging(value);
                    ReportPropertyChanging("TerritoryID");
                    _TerritoryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TerritoryID");
                    OnTerritoryIDChanged();
                }
            }
        }
        private global::System.String _TerritoryID;
        partial void OnTerritoryIDChanging(global::System.String value);
        partial void OnTerritoryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.String TerritoryDescription
        {
            get
            {
                return _TerritoryDescription;
            }
            set
            {
                OnTerritoryDescriptionChanging(value);
                ReportPropertyChanging("TerritoryDescription");
                _TerritoryDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TerritoryDescription");
                OnTerritoryDescriptionChanged();
            }
        }
        private global::System.String _TerritoryDescription;
        partial void OnTerritoryDescriptionChanging(global::System.String value);
        partial void OnTerritoryDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute]
        public global::System.Int32 RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private global::System.Int32 _RegionID;
        partial void OnRegionIDChanging(global::System.Int32 value);
        partial void OnRegionIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "FK_Territories_Region", "Region")]
        public Region Region { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("northwindModel.FK_Territories_Region", "Region").Value;
        //    }
        //    set
        //    {
        //        ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("northwindModel.FK_Territories_Region", "Region").Value = value;
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute]
        public EntityReference<Region> RegionReference { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("northwindModel.FK_Territories_Region", "Region");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("northwindModel.FK_Territories_Region", "Region", value);
        //        }
        //    }
        //}

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute]
        [SoapIgnoreAttribute]
        [DataMemberAttribute]
        [EdmRelationshipNavigationPropertyAttribute("northwindModel", "EmployeeTerritories", "Employees")]
        // modified to List<T> instead of EntityCollection<T> due to Bug 373015
        public List<Employee> Employees { get; set; }
        //{
        //    get
        //    {
        //        return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("northwindModel.EmployeeTerritories", "Employees");
        //    }
        //    set
        //    {
        //        if ((value != null))
        //        {
        //            ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("northwindModel.EmployeeTerritories", "Employees", value);
        //        }
        //    }
        //}

        #endregion
    }

    #endregion
}
